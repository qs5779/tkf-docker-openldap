---

# project information
project_name: openldap
project_url: "https://www.openldap.org/"
project_logo: "https://www.openldap.org/images/headers/LDAPworm.gif"
project_blurb: "[{{ project_name|capitalize }}]({{ project_url }}) is a collaborative effort to [develop](https://www.openldap.org/devel/) a robust, commercial-grade, fully featured, and open source LDAP suite of applications and development tools. The project is managed by a worldwide community of volunteers that use the Internet to communicate, plan, and develop the [OpenLDAP Suite](https://www.openldap.org/software/) and its related documentation."
project_lsio_github_repo_url: "https://github.com/teknofile/tkf-docker-{{ project_name }}"

# supported architectures
available_architectures:
  - { arch: "{{ arch_x86_64 }}", tag: "amd64-latest"}
  - { arch: "{{ arch_arm64 }}", tag: "arm64v8-latest"}
  - { arch: "{{ arch_armhf }}", tag: "arm32v7-latest"}

# container parameters
param_container_name: "{{ project_name }}"
param_usage_include_vols: true
param_volumes:
  - { vol_path: "/config", vol_host_path: "</path/to/openldap/config>", desc: "Configure the `Targets` file here" }
param_usage_include_ports: true
param_ports:
  - { external_port: "389", internal_port: "389", port_desc: "Allows LDAP traffic to the container, both unencrypted and support for STARTTLS." }
  - { external_port: "636", internal_port: "636", port_desc: "Allows LDAPS traffic to the container." } 
param_usage_include_env: true
param_env_vars:
  - { env_var: "TZ", env_value: "America/Denver", desc: "Specify a timezone to use EG America/Denver" }
  - { env_var: "LDAP_CA_CERT", env_value: "fullchain.pem", desc: "The name of the file that contains the CA cert for encrypted LDAP comms" }
  - { env_var: "LDAP_CERT", env_value: "cert.pem", desc: "The name of the certificate used to protect the LDAPS/TLS communications." }
  - { env_var: "LDAP_CERT_KEY", env_value: "privkey.pem", desc: "The corresponding private key (without a passphrase) that goes along with the cert.pem file" }
  - { env_var: "ORG_DN", env_value: "dc=example,dc=net", desc: "The orginzation dn to use" }
  - { env_var: "ORG_NAME", env_value: "Example Networks", desc: "The name of your organization" }
  - { env_var: "ACCESS_CONTROL", env_value: "access to * by * read", desc: "The initial access controls put into the LDAP cn=config" }
  - { env_var: "PUID", env_value: "1000", desc: "User ID to map to" }
  - { env_var: "PGID", env_value: "1000", desc: "Group ID to map to" }

# application setup block
app_setup_block_enabled: true
app_setup_block: |
  - make sure to specify --hostname <hostname that works with the cert you are providing>
  - make sure to put the certificates (with appropriate perms) in /config/certs/
  - once running, container will configure a basic LDAP tree and store the admin dn pw in /config/openldap/ldap_root_pw. Secure it asap. Change it asap.
  - Basics are, build the container, put the certs in the right dir, test with ldapsearch

# changelog
changelogs:
  - { date: "29.07.19:", desc: "This is the first release, it is mostly stable, but may contain minor defects." }
